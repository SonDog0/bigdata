# 파이썬 개요

"""
1.프로그래밍 언어 특성

1) 컴파일러 방식
    => 소스코드 작성 후 일괄적으로 기계어로 번역 후 실행
        소스코드를 기계어로 번환하는 과정 : 컴파일
        소스코드를 기계어로 변환하는 프로그램 : 컴파일러
        수정사항 발생시 전체 소스코드를 다시 컴파일 해야함
        ex) C, C++

2) 인터프리터(interpreter)
    => 소스코드를 작성 후 코드 한줄씩 읽고 기계어로 변환 후 실행
        별로도 실행파일은 생성되지 않음 -> 속도느림
        코드를 한줄씩 읽고 기계어로 변환하는 프로그램 : 인터프리터
        ex) gwbasic, fortran, javascript, python

3) 하이브리드 방식
    => 컴파일러 + 인터프리터 방식 혼용
        소스코드를 번역해서 중간코드 생성
        중간코드는 인터프리터 방식으로 한줄씩 읽어 코드 실행
        플랫폼에 독립적인 코드 작성/실행이 용이해짐
        ex) java, 닷넷
"""

print('Hello, World!!')
#   => 작성해야 하는 언어가 짧음

# 간단한 다이아몬드 출력
print('    *')
print('   ***')
print('  *****')
print(' *******')
print('*********')
print(' *******')
print('  *****')
print('   ***')
print('    *')

# print 함수 사용법
print('망했드아') # 문자형태 출력
print('100')      # 문자 100 출력
print(100)        # 숫자 100 출력

# 100+100은 200입니다 라는 문자열 출력
print('100+100은')
print(100+100)
print('입니다')

print('100+100은',100+100,'입니다')

print(100,'+',100,'은',100+100,'입니다')

print('%d + %d는 %d입니다' %(100,100,100+100))

"""
# print()에서 사용할 수 있는 형식지정자
%d : 정수 
%f : 실수
%c : 문자 1자
%s : 문자열
"""

print('%d' %1234567890)
print('%15d' %1234567890)
print('%015d' %1234567890)

print('%f' %123456.67890)
print('%7.1f' %123456.67890)
print('%7.3f' %123456.67890)

# format 함수를 이용한 출력 (python 2.x)
print('{0},+{1}은 {2}입니다'.format(100,100,100+100))

# print 함수를 이용한 특수문자 출력
# \n : 줄바꿈
# \' : '출력
# \" : "출력
# \t : tab 출력

print('\n줄바꿈\n연습\n')
print('\t탭\t연\t습')


print('*   *    **    ****    ****    *   *       /////')
print('*   *   *  *   *   *   *   *   *   *      | o  o |')
print('*****  *    *  ****    ****     * *      (|  △  |)')
print('*   *  ******  *   *   *   *     *        | [__] |')
print('*   *  *    *  *    *  *    *    *         ______ ')

